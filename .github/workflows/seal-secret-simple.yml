name: Seal Secret (Simple - No EC2 needed)

on:
  workflow_dispatch:

jobs:
  seal-and-commit:
    runs-on: ubuntu-latest  # Use GitHub-hosted runner

    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      with:
        fetch-depth: 0
        token: ${{ secrets.PAT_TOKEN }}

    - name: Install kubeseal
      run: |
        wget https://github.com/bitnami-labs/sealed-secrets/releases/download/v0.17.3/kubeseal-0.17.3-linux-amd64.tar.gz
        tar -xvzf kubeseal-0.17.3-linux-amd64.tar.gz
        sudo install -m 755 kubeseal /usr/local/bin/kubeseal

    - name: Get sealed-secrets public key from your cluster
      run: |
        # You need to get this once from your cluster and store it as a secret
        # Run this on your monitoring server: kubeseal --fetch-cert > public-key.pem
        # Then store the content as SEALED_SECRETS_PUBLIC_KEY secret
        echo "${{ secrets.SEALED_SECRETS_PUBLIC_KEY }}" > public-key.pem

    - name: Seal the secret using public key
      run: |
        mkdir -p kubernetes
        
        # Create secret and seal it using the public key (no cluster connection needed)
        kubectl create secret generic google-credentials-secret \
          --from-literal=credentials.json='${{ secrets.GOOGLE_CREDENTIALS }}' \
          --dry-run=client -o yaml | \
        kubeseal --cert public-key.pem --format yaml > kubernetes/secrets.yaml

    - name: Commit and push changes
      run: |
        git config --global user.name 'github-actions[bot]'
        git config --global user.email 'github-actions[bot]@users.noreply.github.com'
        git add kubernetes/secrets.yaml
        if ! git diff --staged --quiet; then
          git commit -m "Seal new google-credentials-secret"
          git push
        else
          echo "No changes to commit."
        fi
